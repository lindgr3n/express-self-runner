name: node-build-and-deploy

on:
  # Trigger the workflow on a push to the main branch.
  push:
    branches: main

  # Allows you to run this workflow manually (for any branch) from the Actions tab.
  workflow_dispatch:

env:
  # ðŸ‘‡ Set the artifact name that will be used by the build and deployments, so it is now only defined in one place.
  artifactName: buildArtifact

jobs:
  set-version:
    # For node im not sure if it is necessary to set the version on the artifact name. Could be good in .net projects where we can update the manifest
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package-version.outputs.current-version }} 
    #environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Get version from package.json
      id: package-version
      run: |
        version=$(jq -r '.version' package.json)
        echo "current-version=$version" >> $GITHUB_OUTPUT
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump GitHub vars  context
      env:
        GITHUB_CONTEXT_VARS: ${{ toJson(vars) }}
      # Only prints value if the environment property is set
      run: echo "$GITHUB_CONTEXT_VARS"
    # - name: get-npm-version
    #   id: package-version
    #   uses: martinbeentjes/npm-get-version-action@v1.3.1
    # - name: set-env
    #   run: echo "current-version=${{ steps.package-version.outputs.current-version }}" >> $GITHUB_ENV
  # ðŸ‘‡ Call the build workflow to create the artifacts to deploy, and provide the artifact name.
  build-and-test:
    needs: set-version
    uses: ./.github/workflows/node-build-template.yml
    with:
      artifactName: buildArtifact-${{ needs.set-version.outputs.version}}-${{ github.run_id }}
    secrets: inherit # Pass secrets to the build workflow, if necessary.

  deploy-to-dev:
    # Only run this deploy job after the build-and-test job completes successfully.
    needs: [set-version, build-and-test]
    # ðŸ‘‡ Call the deploy template with the proper environment name to deploy the artifacts.
    uses: ./.github/workflows/node-deploy-template.yml
    # Only run this job if the branch name starts with 'dev'. 
    if: startsWith(github.ref, 'refs/heads/dev')
    # Ensures that only one instance of the workflow runs per branch or tag 
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    with:
      artifactName: buildArtifact-${{ needs.set-version.outputs.version}}-${{ github.run_id }}
      environmentName: dev
      # Somehow we need to set the correct environment property to make this work
      #path: ${{ vars.PATH }}
      path: ${{ vars.PATH_DEV }}
    secrets: inherit # Pass repository secrets to the deployment workflow.
  
  deploy-to-test:
    # Only run this deploy job after the build-and-test job completes successfully.
    needs: [set-version, build-and-test]
    # ðŸ‘‡ Call the deploy template with the proper environment name to deploy the artifacts.
    uses: ./.github/workflows/node-deploy-template.yml
    # Only run this job if the branch name starts with 'test'. 
    if: startsWith(github.ref, 'refs/heads/test')
    # Ensures that only one instance of the workflow runs per branch or tag 
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    with:
      artifactName: buildArtifact-${{ needs.set-version.outputs.version}}-${{ github.run_id }}
      environmentName: test
      #path: ${{ vars.PATH }}
      path: ${{ vars.PATH_TEST }}
    secrets: inherit # Pass repository secrets to the deployment workflow.

  deploy-to-production:
    # Only run this deploy job after the build-and-test job completes successfully.
    needs: [set-version, build-and-test]
    # ðŸ‘‡ Call the deploy template with the proper environment name to deploy the artifacts.
    uses: ./.github/workflows/node-deploy-template.yml
    # Only run this job if the branch name starts with 'main'. 
    if: startsWith(github.ref, 'refs/heads/main')
    # Ensures that only one instance of the workflow runs per branch or tag 
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    with:
      artifactName: buildArtifact-${{ needs.set-version.outputs.version}}-${{ github.run_id }}
      environmentName: production
      #path: ${{ vars.PATH }}
      path: ${{ vars.PATH_PROD }}
    secrets: inherit # Pass repository secrets to the deployment workflow.
  
  # cleanup:
  #   name: ðŸ§¹ Cleanup
  #   needs: [set-version, deploy-to-dev, deploy-to-test, deploy-to-production]
  #   # Ensures that the step always will run, regardless of the outcome of previous jobs or steps
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: geekyeggo/delete-artifact@v2
  #       with:
  #         name: |
  #           buildArtifact-${{ needs.set-version.outputs.version}}-${{ github.run_id }}